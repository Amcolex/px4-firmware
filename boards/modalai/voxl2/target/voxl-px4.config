#!/bin/sh
# PX4 commands need the 'px4-' prefix in bash.
# (px4-alias.sh is expected to be in the PATH)
. px4-alias.sh

if [ $TESTMODE = "ON" ]; then
    /bin/echo "Running self tests"
    muorb test
    MUORB_TEST_STATUS=$?
    if [ $MUORB_TEST_STATUS -ne 0 ]; then
        /bin/echo "muorb test failed"
        shutdown
        exit 0
    else
        /bin/echo "muorb test passed"
    fi
fi

muorb start

# In order to just exit after starting the uorb / muorb modules define
# the environment variable MINIMAL_PX4. (e.g. export MINIMAL_PX4=1)
# This is useful for testing / debug where you may want to start drivers
# and modules manually from the px4 command shell
if [ ! -z $MINIMAL_PX4 ]; then
    /bin/echo "Running minimal script"
    exit 0
fi

# Sleep a little here. A lot happens when the uorb and muorb start
# and we need to make sure that it all completes successfully to avoid
# any possible race conditions.
/bin/sleep 1

param select /data/px4/param/parameters

# Load in all of the parameters that have been saved in the file
param load

# Start logging and use timestamps for log files when possible.
# Add the "-e" option to start logging immediately. Default is
# to log only when armed
logger start -t

/bin/sleep 1

# IMU (accelerometer / gyroscope)
if [ "$IMU" == "ROTATE_IMU_YAW_180" ]; then
    /bin/echo "Starting IMU driver with yaw 180 rotation"
    qshell icm42688p start -s -R 4
else
    qshell icm42688p start -s
fi

/bin/sleep 1

# We do not change the value of SYS_AUTOCONFIG but if it does not
# show up as used then it is not reported to QGC and we get a
# missing parameter error.
param touch SYS_AUTOCONFIG

# ESC driver
qshell modalai_esc start

/bin/sleep 1

if [ "$RC" == "FAKE_RC_INPUT" ]; then
    /bin/echo "Starting fake RC driver"
    qshell rc_controller start
else
    /bin/echo "Starting TBS crossfire RC - MAV Mode"
    qshell mavlink_rc_in start -m -p 7 -b 115200
fi

/bin/sleep 1

# Start all of the processing modules on DSP
qshell sensors start
qshell ekf2 start
qshell mc_pos_control start
qshell mc_att_control start
qshell mc_rate_control start
qshell mc_hover_thrust_estimator start
qshell land_detector start multicopter

/bin/sleep 1

# Start all of the processing modules on the applications processor
rc_update start
manual_control start
control_allocator start
dataman start
navigator start
commander start
commander mode manual

# This is needed for altitude and position hold modes
flight_mode_manager start

mavlink start -x -u 14556 -o 14557 -r 100000 -n lo -m onboard

# slow down some of the fastest streams in onboard mode
mavlink stream -u 14556 -s HIGHRES_IMU -r 10
mavlink stream -u 14556 -s ATTITUDE -r 10
mavlink stream -u 14556 -s ATTITUDE_QUATERNION -r 10
# speed up rc_channels
mavlink stream -u 14556 -s RC_CHANNELS -r 50

/bin/sleep 1

mavlink boot_complete
