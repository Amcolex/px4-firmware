#!/bin/sh
# PX4 commands need the 'px4-' prefix in bash.
# (px4-alias.sh is expected to be in the PATH)
. px4-alias.sh

if [ $TESTMODE = "ON" ]; then
    /bin/echo "Running self tests"
    muorb test
    MUORB_TEST_STATUS=$?
    if [ $MUORB_TEST_STATUS -ne 0 ]; then
        /bin/echo "muorb test failed"
        shutdown
        exit 0
    else
        /bin/echo "muorb test passed"
    fi
fi

muorb start

/bin/sleep 1

param select /data/px4/param/parameters

# Load in all of the parameters that have been saved in the file
param load

# Make sure we are running at 800Hz on IMU
# param set IMU_GYRO_RATEMAX 800

# Start logging and use timestamps for log files when possible.
# Add the "-e" option to start logging immediately. Default is
# to log only when armed
logger start -t

# IMU driver for accelerometer and gyroscope
qshell icm42688p start -s

/bin/sleep 1

# Set the ESC outputs to function as motors
param set UART_ESC_FUNC1 101
param set UART_ESC_FUNC2 104
param set UART_ESC_FUNC3 102
param set UART_ESC_FUNC4 103

param set UART_ESC_REV 1

param set UART_ESC_CONFIG 1
param set UART_ESC_BAUD 2000000
param set UART_ESC_RPM_MAX 24000
param set UART_ESC_RPM_MIN 3000

# ESC driver
qshell modalai_esc start

/bin/sleep 1

# Crossfire RC receiver driver
# qshell crsf_rc start -d 7
qshell tbs_crossfire start -m -p 7 -b 115200

# Fake RC driver for testing purposes
# Map RC channels for the rc_controller driver
# param set RC_MAP_PITCH 3
# param set RC_MAP_ROLL 4
# param set RC_MAP_THROTTLE 1
# param set RC_MAP_YAW 2
# qshell rc_controller start

qshell sensors start

qshell ekf2 start

qshell mc_pos_control start

qshell mc_att_control start

qshell mc_rate_control start

qshell mc_hover_thrust_estimator start

qshell land_detector start multicopter

rc_update start

manual_control start

# Some parameters for control allocation
param set CA_ROTOR_COUNT 4
param set CA_AIRFRAME 0
param set CA_ROTOR_COUNT 4
param set CA_ROTOR0_PX 0.15
param set CA_ROTOR0_PY 0.15
param set CA_ROTOR1_PX -0.15
param set CA_ROTOR1_PY -0.15
param set CA_ROTOR2_PX 0.15
param set CA_ROTOR2_PY -0.15
# param set CA_ROTOR2_KM -0.05
param set CA_ROTOR3_PX -0.15
param set CA_ROTOR3_PY 0.15
# param set CA_ROTOR3_KM -0.05

control_allocator start

dataman start

navigator start

# Some parameter settings to disable / ignore certain preflight checks

# Allow arming without a barometer (Need barometer driver)
param set SYS_HAS_BARO 0

# Allow arming wihtout a magnetometer (Need magnetometer driver)
param set SYS_HAS_MAG 0
param set EKF2_MAG_TYPE	5

# Allow arming without battery check (Need voxlpm driver)
param set CBRK_SUPPLY_CHK 894281

# Allow arming wihtout CPU load information
param set COM_CPU_MAX 0.0

# Disable auto disarm. This is number of seconds to wait for takeoff
# after arming. If no takeoff happens then it will disarm. A negative
# value disables this.
param set COM_DISARM_PRFLT -1

commander start
commander mode manual

# This is needed for altitude and position hold modes
flight_mode_manager start

# As of 1.4.11 mavlink configuration has been changed!!! All communications are
# now done via the mavlink server and voxl-vision-px4!!!
# param set MAV_BROADCAST 0

# Doesn't work without setting this to Quadcopter
param set MAV_TYPE 2
param set SYS_AUTOSTART 4001
param set SYS_AUTOCONFIG 0

mavlink start -x -u 14556 -o 14557 -r 100000 -n lo -m onboard

# slow down some of the fastest streams in onboard mode
mavlink stream -u 14556 -s HIGHRES_IMU -r 10
mavlink stream -u 14556 -s ATTITUDE -r 10
mavlink stream -u 14556 -s ATTITUDE_QUATERNION -r 10
# speed up rc_channels
mavlink stream -u 14556 -s RC_CHANNELS -r 50

/bin/sleep 1

mavlink boot_complete
