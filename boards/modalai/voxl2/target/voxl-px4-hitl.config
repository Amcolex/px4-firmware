#!/bin/sh
# PX4 commands need the 'px4-' prefix in bash.
# (px4-alias.sh is expected to be in the PATH)
. px4-alias.sh

if [ $TESTMODE = "ON" ]; then
    /bin/echo "Running self tests"
    muorb test
    MUORB_TEST_STATUS=$?
    if [ $MUORB_TEST_STATUS -ne 0 ]; then
        /bin/echo "muorb test failed"
        shutdown
        exit 0
    else
        /bin/echo "muorb test passed"
    fi
fi

muorb start

# Sleep a little here. A lot happens when the uorb and muorb start
# and we need to make sure that it all completes successfully to avoid
# any possible race conditions.
/bin/sleep 1

param select /data/px4/param/parameters-hitl
param load

logger start -e -t -b 200

/bin/sleep 1

param touch SYS_AUTOCONFIG
param set CBRK_SUPPLY_CHK 894281
param set COM_DISARM_PRFLT -1
param set COM_RC_IN_MODE 1
param set NAV_RCL_ACT 0
param set EKF2_AID_MASK 1
param set SYS_HITL 1
param set SYS_AUTOSTART 1001
param set HIL_ACT_FUNC1 101
param set HIL_ACT_FUNC2 102
param set HIL_ACT_FUNC3 103
param set HIL_ACT_FUNC4 104
param set MAV_TYPE 2
param set MAV_USEHILGPS 1
param set COM_CPU_MAX -1
param set SYS_HAS_MAG 0
param set EKF2_MAG_TYPE 5

# Start all of the processing modules on DSP
qshell sensors start -hil
qshell ekf2 start
qshell mc_pos_control start
qshell mc_att_control start
qshell mc_rate_control start
qshell mc_hover_thrust_estimator start
qshell land_detector start multicopter

/bin/sleep 1

# Start all of the processing modules on the applications processor
rc_update start
manual_control start
control_allocator start
dataman start
navigator start
commander start -h
commander mode manual

# This is needed for altitude and position hold modes
flight_mode_manager start

# Start simulator modules
qshell pwm_out_sim start -m hil
qshell simulator_mavlink start

# Bootup mavlink
mavlink start -x -u 14556 -o 14557 -r 100000 -n lo -m onboard
mavlink boot_complete
